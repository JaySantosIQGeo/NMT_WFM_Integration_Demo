# 
# This dockerfile is used to build the devcontainer image for development of modules to extend the 
# IQGeo Platform. It is based on the platform-devenv image and optionally
# adds additional modules to the image. The modules are copied from the injector images
#
ARG CONTAINER_REGISTRY=harbor.delivery.iqgeo.cloud/releases/

# START SECTION Aliases for Injector images - beware this section is updated by the IQGeo project configuration tool
FROM ${CONTAINER_REGISTRY}comms:3.2 AS comms
FROM ${CONTAINER_REGISTRY}comsof:1.4 AS comsof
FROM ${CONTAINER_REGISTRY}comms_dev_db:3.2 AS comms_dev_db
FROM ${CONTAINER_REGISTRY}groups:1.0.1 AS groups
FROM ${CONTAINER_REGISTRY}workflow_manager:4.0.alpha3 AS workflow_manager
FROM ${CONTAINER_REGISTRY}workflow_manager_dev_db:4.0.alpha2 AS workflow_manager_dev_db
FROM ${CONTAINER_REGISTRY}dev_tools:7.2 AS dev_tools
# END SECTION


FROM ${CONTAINER_REGISTRY}platform-devenv-2:7.2

USER root

RUN mkdir -p ${MYWORLD_DATA_HOME}/tests

# START SECTION optional dependencies (dev) - if you edit these lines manually note that your change will get lost if you run the IQGeo Project Update tool
RUN apt-get update && \
    apt-get install -y libmemcached-dev libmemcached11 \
    && apt-get autoremove && apt-get clean
# END SECTION

RUN pip install cryptojwt

# START SECTION Copy the modules - beware this section is updated by the IQGeo project configuration tool
COPY --link --from=comms / ${MODULES}/
COPY --link --from=comsof / ${MODULES}/
COPY --link --from=comms_dev_db / ${MODULES}/
COPY --link --from=groups / ${MODULES}/
COPY --link --from=workflow_manager / ${MODULES}/
COPY --link --from=workflow_manager_dev_db / ${MODULES}/
COPY --link --from=dev_tools / ${MODULES}/
# END SECTION


# START CUSTOM SECTION - root user
# END CUSTOM SECTION

# # fetch additional python dependencies
RUN myw_product fetch pip_packages --include memcached oidc
# ensure pip dependencies are readable by Apache(www-data) and iqgeo
RUN chown -R www-data:www-data ${MYWORLD_HOME}/Externals && \
    chmod -R g+w ${MYWORLD_HOME}/Externals

# Build additional node_modules
RUN myw_product fetch node_modules
RUN chown -R www-data:www-data ${MODULES}
RUN chmod -R g+w ${MODULES}

RUN myw_product build core_dev --debug
RUN chown -R www-data:www-data ${WEBAPPS}/myworldapp/public
RUN chmod -R g+w ${WEBAPPS}/myworldapp/public


# add additional entrypoint scripts 
COPY --chown=www-data:www-data entrypoint.d/* /entrypoint.d/

COPY --chown=www-data:www-data devserver_config/ /opt/iqgeo/config/

# ensure entrypoint files are executable
RUN chmod +x entrypoint.d/*

# entrypoints should run as www-data and not iqgeo otherwise the UID on the files created in entrypoints won't match the UID mapping done in the dev container
USER www-data 

# configuration
# paths for tools from modules
# aditional environment variables
# START CUSTOM SECTION - www-data user
ENV IQG_WFM_DIR="${MODULES}/workflow_manager"
ENV IQG_WFM_DEV_DB_DIR="${MODULES}/workflow_manager_dev_db"
ENV PATH="${IQG_WFM_DIR}/tools:${PATH}"
ENV PATH="${IQG_WFM_DEV_DB_DIR}/utils:${PATH}"
ENV PATH="${IQG_WFM_DEV_DB_DIR}/tests/client:${PATH}"
ENV PATH="${IQG_WFM_DEV_DB_DIR}/tests/server:${PATH}"
ENV PATH="${IQG_WFM_DEV_DB_DIR}/tests/js:${PATH}"
ENV PATH="${IQG_WFM_DEV_DB_DIR}/tests/tools:${PATH}"

ENV PATH="${IQGEO_BASE}:${PATH}"
# END CUSTOM SECTION
